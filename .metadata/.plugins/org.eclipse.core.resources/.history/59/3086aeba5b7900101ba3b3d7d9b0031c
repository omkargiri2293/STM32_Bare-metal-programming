//Where is led connected
//Port: A
//Pin : 5

#include <stdint.h>

#define PERIPH_BASE              (0X40000000UL)

#define AHB1_PERIPH_OFFSET       (0X00020000UL)
#define AHB1_PERIPH_BASE         (PERIPH_BASE + AHB1_PERIPH_OFFSET)

#define GPIOA_OFFSET             (0X0000UL)  // it is same as 0X 0000 0000
#define GPIOA_BASE				 (AHB1_PERIPH_BASE + GPIOA_OFFSET)

#define RCC_OFFSET				 (0X3800UL)
#define RCC_BASE				 (AHB1_PERIPH_BASE + RCC_OFFSET)

#define AHB1EN_R_OFFSET        (OX30UL)
#define RCC_AHB1EN_R			(*(volatile unsigned int *)(RCC_BASE + AHB1EN_R_OFFSET)

#define MODE_R_OFFSET		    (0X00)
#define GPIOA_MODE_R			(*(volatile unsigned int *)	 (GPIOA_BASE + MODE_R_OFFSET))

#define OD_R_OFFSET				(0X14UL)
#define GPIOA_OD_R				(*(volatile unsigned int *)(GPIOA_BASE + OD_R_OFFSET))


#define GPIOAEN					 (1U<<0) // 0b 0000 0000 0000 0000 0000 0000 0000 0001


/* MODER5
 * (1U<<10)  set bit 10 to 1
 * &=~(1U<<11) set bit 11 to 0
 */

#define PIN5					(1U<<5)
#define LED_PIN						PIN5

#define __IO					volatile


typedef struct{
	volatile uint32_t MODER; //offset addr: 0x00
	volatile uint32_t DUMMY[4];
	volatile uint32_t ODR;   //offset addr: 0x14
}GPIO_TypeDef;

typedef struct{
	volatile uint32_t DUMMY[12];
	volatile uint32_t AHB1ENR;//Addr offset: 0x30
}RCC_TypeDef;

#define RCC				((RCC_TypeDef*) RCC_BASE)
#define GPIOA			((GPIO_TypeDef*) GPIO_BASE)

int main(void)
{
	//1.enable clock access to GPIOA
	//RCC_AHB1EN_R |= GPIOAEN;

	RCC->AHB1ENR |= GPIOAEN;

	//2.set PA5 as output pin
//	GPIOA_MODE_R |= (1U<<10);//set bit 10 to 1
//	GPIOA_MODE_R &=~(1U<<11);//set bit 11 to 0

	GPIOA->MODER |= (1U<<10);//set bit 10 to 1
	GPIOA->MODER &=~(1U<<11);//set bit 11 to 0

	while(1){
		//3.set PA5 High
		//GPIOA_OD_R |= LED_PIN;

		GPIOA->ODR ^= LED_PIN;

		for(int i=0;i<100000;i++){

		}
	}
}
